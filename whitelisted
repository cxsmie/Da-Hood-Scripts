local premium_table = {
    
    blacklisted = {
        emoji = '‚ùå',
        1878601682,
    },
    
    premium = {
        emoji = '‚≠ê',
        1743541688,
    },

    content_creator = {
        emoji = '‚ú®',
    },

    admins = {
        emoji = 'üëë',
    },

    owners = {
        emoji = 'ü§ë',
    },

    
}

premium_table.refresh = function()
    
    local admin_table = {
        
        blacklisted = {}
        
        premium = {}
        
        content_creator = {}
        
        admins = {}
        
        owners = {}
        
    }
    
    for i, v in pairs(game.Players:GetPlayers()) do
        
        spawn(function()
            
            if not v.Character then
                v.CharacterAdded:Wait()
            end
            
            v.Character:WaitForChild('Humanoid')
            
        
            if v.Character:FindFirstChild('Humanoid') and not table.find(admin_table, v) then
            
                if table.find(premium_table.premium, v.UserId) then -- premium
                    v.Character.Humanoid.DisplayName = string.format('[%s]%s', premium_table.premium.emoji, v.DisplayName)
                    
                    v.CharacterAdded:Connect(function(new_char)
                        new_char:WaitForChild('Humanoid')
                        
                        new_char.Humanoid.DisplayName = string.format('[%s]%s', premium_table.premium.emoji, v.DisplayName)
                    end)
                    
                    local left_function
                    
                    left_function = game.Players.PlayerRemvoing:Connect(function(player)
                        if player == v and table.find(admin_table.premium, player) then
                            table.remove(admin_table.premium, player)
                        end
                        
                    end)
                    
                    
                    table.insert(admin_table.premium, v)
                    
                elseif table.find(premium_table.content_creator, v.UserId) and not table.find(admin_table.content_creator, v) then -- content creators
                    v.Character.Humanoid.DisplayName = string.format('[%s]%s', premium_table.content_creator.emoji, v.DisplayName)
                    
                    v.CharacterAdded:Connect(function(new_char)
                        new_char:WaitForChild('Humanoid')
                        
                        new_char.Humanoid.DisplayName = string.format('[%s]%s', premium_table.content_creator.emoji, v.DisplayName)
                    end)
                    
                    local left_function
                    
                    left_function = game.Players.PlayerRemvoing:Connect(function(player)
                        if player == v and table.find(admin_table.content_creator, player) then
                            table.remove(admin_table.content_creator, player)
                        end
                        
                    end)
                    
                    
                    table.insert(admin_table.content_creator, v)
                    
                elseif table.find(premium_table.admins, v.UserId) and not table.find(admin_table.admins, v) then -- admins
                    v.Character.Humanoid.DisplayName = string.format('[%s]%s', premium_table.admins.emoji, v.DisplayName)
                    
                    v.CharacterAdded:Connect(function(new_char)
                        new_char:WaitForChild('Humanoid')
                        
                        new_char.Humanoid.DisplayName = string.format('[%s]%s', premium_table.admins.emoji, v.DisplayName)
                    end)
                    
                    local left_function
                    
                    left_function = game.Players.PlayerRemvoing:Connect(function(player)
                        if player == v and table.find(admin_table.admins, player) then
                            table.remove(admin_table.admins, player)
                        end
                        
                    end)
                    
                    
                    table.insert(admin_table.admins, v)
                elseif table.find(premium_table.owners, v.UserId) and not table.find(admin_table.owners, v) then -- owners
                    v.Character.Humanoid.DisplayName = string.format('[%s]%s', premium_table.owners.emoji, v.DisplayName)
                    
                    v.CharacterAdded:Connect(function(new_char)
                        new_char:WaitForChild('Humanoid')
                        
                        new_char.Humanoid.DisplayName = string.format('[%s]%s', premium_table.owners.emoji, v.DisplayName)
                    end)
                    
                    local left_function
                    
                    left_function = game.Players.PlayerRemvoing:Connect(function(player)
                        if player == v and table.find(admin_table.owners, player) then
                            table.remove(admin_table.owners, player)
                        end
                        
                    end)
                    
                    
                    table.insert(admin_table.owners, v)
                    
                elseif table.find(premium_table.blacklisted, v.UserId) and not table.find(admin_table.blacklisted, v) then
                    v.Character.Humanoid.DisplayName = string.format('[%s]%s', premium_table.blacklisted.emoji, v.DisplayName)
                    
                    v.CharacterAdded:Connect(function(new_char)
                        new_char:WaitForChild('Humanoid')
                        
                        new_char.Humanoid.DisplayName = string.format('[%s]%s', premium_table.blacklisted.emoji, v.DisplayName)
                    end)
                    
                    local left_function
                    
                    left_function = game.Players.PlayerRemvoing:Connect(function(player)
                        if player == v and table.find(admin_table.blacklisted, player) then
                            table.remove(admin_table.blacklisted, player)
                        end
                        
                    end)
                    
                    
                    table.insert(admin_table.blacklisted, v)
                end
                
            end
            
        end)
        
    end
    
    
    return admin_table
end

premium_table.check = function(target, type)
    
    if type == 1 then
        type = 'premium'
    elseif type == 2 then
        type = 'content_creator'
    elseif type == 3 then
        type = 'admins'
    elseif type == 4 then
        type = 'owners'
    end
    
    
    if table.find(premium_table[type], target.UserId) then
       return true
    end
end

return premium_table
